# This is a basic workflow to help you get started with Actions
name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [main, develop, master]
  pull_request:
    branches: [main, develop, master]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-2022

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v4
        with:
          submodule: recursive
          fetch-depth: 0

      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.x"

      - name: Restore NuGet packages
        run: dotnet restore

      - name: Build Binary
        shell: cmd
        run: dotnet build

      - name: Create Archive
        shell: powershell
        run: ./CreateArchive.ps1
        env:
          COMMIT_MESSAGE: "${{ github.event.commits[0].message }}"

      - name: Get current date and time
        id: datetime
        run: echo "CURRENT_DATETIME=$(date +'%d/%m/%Y %H:%M')" >> "$GITHUB_ENV"

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{github.run_number}}
          release_name: ${{ steps.datetime.outputs.CURRENT_DATETIME }} (${{ github.run_number }})
          body: |
            Automated Release by GitHub Action CI
          draft: false
          prerelease: false
          files: .build/UnityLauncherPro.zip
