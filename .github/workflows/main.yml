# This is a basic workflow to help you get started with Actions
name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [main, develop, master]
  pull_request:
    branches: [main, develop, master]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-2022

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v4
        with:
          submodule: recursive
          fetch-depth: 0

      - name: Check Commit and Install 7Zip PowerShell Module
        shell: powershell
        run: |
          # Convert commit message to a single line if multiline
          $singleLineStrVal = "$Env:COMMIT_MESSAGE" -replace "`r`n", " " -replace "`n", " "
          if($singleLineStrVal -match '#GITBUILD')
          {
                Write-Host 'Commit message matched with "#GITBUILD"'
          }
          Write-Host 'Installing 7Zip PowerShell module'
        env:
          COMMIT_MESSAGE: "${{ github.event.commits[0].message }}"

      - name: Restore NuGet packages
        run: nuget restore UnityLauncherPro.sln

      - name: Build Binary
        shell: cmd
        run: call ./Build.cmd

      - name: Build Artifact
        shell: cmd
        run: call ./ArtifactBuild.cmd

      - name: Get current date and time
        id: datetime
        run: echo "::set-output name=current_datetime::$(date +'%d/%m/%Y %H:%M')"

      - name: Create Release
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{github.run_number}}
          release_name: ${{ steps.datetime.outputs.current_datetime }} (${{ github.run_number }})
          body: |
            Automated Release by GitHub Action CI
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./UnityLauncherPro.zip
          asset_name: UnityLauncherPro.zip
          asset_content_type: application/zip
